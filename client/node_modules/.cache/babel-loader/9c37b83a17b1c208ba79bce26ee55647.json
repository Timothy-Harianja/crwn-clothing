{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\TH2\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\TH2\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\TH2\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\TH2\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\TH2\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from'../../components/form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from'../../redux/user/user.actions';import'./sign-in.styles.scss';var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setCredentials=_useState2[1];var email=userCredentials.email,password=userCredentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredentials(_objectSpread(_objectSpread({},userCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-in\"},/*#__PURE__*/React.createElement(\"h2\",null,\"I already have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign in with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{name:\"email\",type:\"email\",value:email,handleChange:handleChange,label:\"email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"password\",type:\"password\",value:password,handleChange:handleChange,label:\"password\",required:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\" Sign in \"),/*#__PURE__*/React.createElement(CustomButton,{tpye:\"button\",onClick:googleSignInStart,isGoogleSignIn:true/*it should be set to ={true} */},\"Sign in with Google\"))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/TH2/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"myBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,gBAAgB,GAAhBA,CAAAA,iBAA5B,KAAoD,+BAApD,CAEA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CD,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eACdJ,QAAQ,CAAC,CAAEO,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CADM,wCACjDC,eADiD,eAChCC,cADgC,kBAEhDH,CAAAA,KAFgD,CAE5BE,eAF4B,CAEhDF,KAFgD,CAEzCC,QAFyC,CAE5BC,eAF4B,CAEzCD,QAFyC,CAIxD,GAAMG,CAAAA,YAAY,2FAAG,iBAAMC,KAAN,kHACjBA,KAAK,CAACC,cAAN,GACAR,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAFiB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAKA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,KAAK,CAAI,mBACJA,KAAK,CAACG,MADF,CACnBC,KADmB,eACnBA,KADmB,CACZC,IADY,eACZA,IADY,CAG1BP,cAAc,gCAAKD,eAAL,wBAAuBQ,IAAvB,CAA8BD,KAA9B,GAAd,CACH,CAJD,CAMA,mBACI,2BAAK,SAAS,CAAC,SAAf,eACI,0DADJ,cAEI,uEAFJ,cAII,4BAAM,QAAQ,CAAEL,YAAhB,eACI,oBAAC,SAAD,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAEJ,KAHX,CAII,YAAY,CAAEO,YAJlB,CAKI,KAAK,CAAC,OALV,CAMI,QAAQ,KANZ,EADJ,cASI,oBAAC,SAAD,EACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAEN,QAHX,CAII,YAAY,CAAEM,YAJlB,CAKI,KAAK,CAAC,UALV,CAMI,QAAQ,KANZ,EATJ,cAiBI,2BAAK,SAAS,CAAC,SAAf,eACI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,cADJ,cAEI,oBAAC,YAAD,EACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAEV,iBAFb,CAEgC,cAAc,KAAC,gCAF/C,wBAFJ,CAjBJ,CAJJ,CADJ,CAkCH,CAjDD,CAoDA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCf,iBAAiB,CAAE,mCAAMe,CAAAA,QAAQ,CAACf,kBAAiB,EAAlB,CAAd,EADiB,CAEpCC,gBAAgB,CAAE,0BAACE,KAAD,CAAQC,QAAR,QAAqBW,CAAAA,QAAQ,CAACd,iBAAgB,CAAC,CAACE,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAD,CAAjB,CAA7B,EAFkB,CAAL,EAAnC,CAKA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; \r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({ email: '', password: ''})\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const {value, name} = event.target;\r\n\r\n        setCredentials({...userCredentials, [name]: value})\r\n    }\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name='email' \r\n                    type='email' \r\n                    value={email} \r\n                    handleChange={handleChange}\r\n                    label='email'\r\n                    required \r\n                /> \r\n                <FormInput \r\n                    name='password' \r\n                    type='password' \r\n                    value={password} \r\n                    handleChange={handleChange}\r\n                    label='password'\r\n                    required \r\n                /> \r\n                <div className='buttons'>\r\n                    <CustomButton type='submit'> Sign in </CustomButton>\r\n                    <CustomButton \r\n                        tpye='button'\r\n                        onClick={googleSignInStart} isGoogleSignIn /*it should be set to ={true} */ \r\n                    > \r\n                        Sign in with Google \r\n                    </CustomButton>\r\n                </div>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);  \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}